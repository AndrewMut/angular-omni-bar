<!DOCTYPE html>
<html lang="en" ng-app="myApp" id="ng-app">
<head>

    <title>AngularJS Omni Bar</title>        
    <!-- css -->
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">     
    
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="highlight/styles/github.css">
    <link rel="stylesheet" href="isteven-omni-bar.css">                        

    <!-- JS -->
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="highlight/highlight.pack.js"></script>
    <script src="angular.min.js"></script>        
    <script src="isteven-omni-bar.js"></script>      
    <script src="angular-highlightjs.js"></script>        

</head>
<body ng-controller="main">

    <div id="container">
        <h1>AngularJS Omni Bar</h1>
        <h4 class="subTitle">
            Native AngularJS multi-purpose bar you can use to display progress or completion.
            <br />
            Version: 1.0.0
        </h4>

        <br />
<div
    isteven-omni-bar
    current-value='value1'
    current-style='style1'
>
<span>{{value1}}%</span>
</div>

<br /><br />

        <a href="https://github.com/isteven/angular-multi-select" target="_blank" class="download" onclick="ga( 'send', 'event', 'button', 'click' );">
            <div class="fa fa-github fa-lg">
            </div>
            &nbsp; View on Github
        </a>                
        <!--
        <iframe src="http://ghbtns.com/github-btn.html?user=isteven&repo=angular-multi-select&type=fork&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="80" height="20"></iframe>
        <iframe src="http://ghbtns.com/github-btn.html?user=isteven&repo=angular-multi-select&type=watch&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="80" height="20"></iframe>
        <iframe src="http://ghbtns.com/github-btn.html?user=isteven&repo=angular-multi-select&type=follow&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="160" height="20"></iframe>
        -->
        <h2>Features</h2>
        <ul>
            <li>Pure AngularJS. Can be easily combined with other Javascript libraries such as jQuery, Twitter Bootstrap, etc.</li>            
            <li>Using simple CSS3 animation.</li>
            <li>Very easy to use & configurable.</li>
        </ul> 
    

        <h2 class="marginTop">Usage</h2>
        Include the required files
        <div hljs class="soloCode" source='"<link rel=\"stylesheet\" href=\"isteven-omni-bar.css\">
...
<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.15/angular.min.js\"></script>
<script src=\"isteven-omni-bar.js\"></script>
...
</div>"'></div>

        Load the omni-bar directive into your AngularJS app, such as:
        <br />
<div hljs class="soloCode">
var myApp = angular.module( 'myApp', [ 'isteven-omni-bar' ] );
</div>

        <div class="col">
        In your view, set the directive as an attribute<br />
<div hljs class="soloCode" source='"<div     
    isteven-omni-bar
    current-value=\"percentageValue\"
    >
</div>"'>
</div>
        </div>
        <div class="col">
        ... or as an element, but be careful with browser compatibility.<br />
<div hljs class="soloCode"><isteven-omni-bar 
    current-value="percentageValue"
    >
    {{percentageValue}}
</isteven-omni-bar>
</div>
        </div>
        <div style="clear:both">   

        In your controller, set the percentageValue variable:
<div hljs class="soloCode">$scope.percentageValue = 39;
</div>
        And that's it! You should now have the omni bar directive like what you see above (but without the animation).
        <br />
        </div>

        <h2 class="marginTop">Attributes / Options</h2>
        
        <div class="col">
            Full spec
<div class="soloCode" hljs source='"<div
    isteven-omni-bar
    current-value=\"number | $scope.var\"    
    max-value=\"number | $scope.var\"    
    current-style=\"css object | $scope.var\"
    max-style=\"css object | $scope.var\"
    container-style=\"css object | $scope.var\"
    info-style=\"css object | $scope.var\"
>
    Any text you want to put in the middle of the bar
</div>"'>
</div>
        </div>
        <div class="col">
            .. or ..
<div hljs class="soloCode" source='"<isteven-omni-bar 
    ...
>
    Any text you want to put in the middle of the bar
</isteven-omni-bar>"'>
</div>
        </div>    

        <div style="clear:both">&nbsp;</div>
        Below are the available attributes to configure the multi-select directive:
        
        <ul>
            <li class="attrs">
                <strong>current-value (REQUIRED)</strong> and <strong>max-value</strong>
                <br />Accept direct value or $scope variable.
                <br />The current-value, combined with max-value (if specified), will decide the width percentage of the current-bar using this formula: (current-value / max-value) * 100                
                <br />IMPORTANT: If max-value is not specified, the current-value will automatically be assumed as the percentage.
            </li>            

            <li class="attrs">
                <strong>current-style</strong>
                <br />CSS for the current-value bar.
                <br />Format: { style: value [, style: value .. ] }
                <br />
            </li>

            <li class="attrs">
                <strong>max-style</strong>
                <br />CSS for the current-value bar.
                <br />Format: { style: value [, style: value .. ] }
            </li>
            
            <li class="attrs">
                <strong>container-style</strong>
                <br />CSS for the container (not visible in the sample).
                <br />Format: { style: value [, style: value .. ] }
            </li>
 
            <li class="attrs">
                <strong>info-style</strong>
                <br />CSS for the text within the bar.
                <br />Format: { style: value [, style: value .. ] }
            </li>            
        </ul>

        * All CSS properties above are the same with jQuery's css() method format. Read more at <a href="http://api.jquery.com/css" target="_blank">http://api.jquery.com/css</a>

        <h2 class="marginTop">Demo</h2>

<h4>1) Simple bar</h4>
        This is a loading / progress bar you can use for almost anything.
        <div 
    isteven-omni-bar
    current-value='currentValue'    
    current-style='loadingCurrent1'
    container-style='loadingBarStyle1'
    max-value='maxValue'
>
    Budget usage: ${{currentValue}} of ${{maxValue}}
</div>
        <br /><br />

        <ul class="nav nav-tabs darkTab" role="tablist">
            <li class="active"><a href="#view1" role="tab" data-toggle="tab">View</a></li>
            <li><a href="#controller1" role="tab" data-toggle="tab">Controller</a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="view1">
                <div hljs class="tabCode" source='"<div 
    isteven-omni-bar
    current-value=\"currentValue\"        
    max-value=\"maxValue\"
    current-style=\"loadingCurrent1\"
    container-style=\"loadingBarStyle1\"
>
Budget usage: $\{\{currentValue\}\} of $\{\{maxValue\}\}
</div>"'>
                </div>
            </div>
        
            <div class="tab-pane" id="controller1">
<div hljs class="tabCode">
$scope.currentValue = 700;
$scope.maxValue     = 1500;

$scope.loadingCurrent1 = {
    backgroundColor: "#008080"
}
</div>
            </div>
        </div>

        <h4>2) Page loading bar</h4>
        Look on top of the page. Missed it? Refresh your page and look again. <br />
        Note: This is just a simple, stupid page loading algorithm. Not really accurate. Use it at your own risk.
        <br /><br />

        <ul class="nav nav-tabs darkTab" role="tablist">
          <li class="active"><a href="#view2" role="tab" data-toggle="tab">View</a></li>
          <li><a href="#controller2" role="tab" data-toggle="tab">Controller</a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="view2">
                <div hljs class="tabCode" source='"<div 
    isteven-omni-bar
    current-value=\"pageSize\"
    current-style=\"loadingCurrent\"
    container-style=\"loadingBarStyle\"
></div>"'>
                </div>
            </div>
        
            <div class="tab-pane" id="controller2">
<div hljs class="tabCode">
$scope.pageSize = 0;

var pulse = $interval( function( pulse ) {
    $scope.pageSize = $scope.pageSize + 1;
    if ( $scope.pageSize > 98 ) {
        $scope.pageSize = 98;
    }
}, 50 );

angular.element(document).ready(function () {        
    $scope.pageSize = 100;
    $interval.cancel(pulse);    
});

$scope.loadingBarStyle2 = {
    position: "fixed",
    top: "0px",
    left: "0px",
    height: "3px",
    zIndex: "20"
}

$scope.loadingCurrent2 = {
    backgroundColor: "orange"
}
</div>
            </div>
        </div>
        
        <div
            isteven-omni-bar
            current-value='pageSize'
            current-style='loadingCurrent2'
            container-style='loadingBarStyle2'
        >
        </div>  

        
 
        <h2 class="marginTop">Dependency</h2>
        AngularJS v1.2.15. Other versions may or may not work. Please test first.

        <h2 class="marginTop">Browser Compatibility</h2>
        Tested on:
        <ul>
            <li>Opera >= 12.16 (Yes, I love Opera browser! Download yours here: <a href="http://www.opera.com/">http://www.opera.com/</a>)</li>
            <li><strike>IE8</strike> IE: At the moment I don't have access to IE9 and above, so please test first before you use this on production environment.</li>
            <li>Firefox >= 27</li>
            <li>Google Chrome >= 33</li>
            <li>Might work on some mobile browsers. Please test first before you use this on production environment.</li>
        </ul>

        <h2 class="marginTop">Bug Reporting</h2>
        <ul>            
            <li>Search in the issue section first. Somebody might have reported the same bug and/or asked similar question. If there's none, then please create a new issue in <a href="https://github.com/isteven/angular-multi-select/issues">https://github.com/isteven/angular-multi-select/issues</a>.</li>
            <li>Try to reproduce the problem in JSFiddle or Plunker (or any other online JS collaboration tool), and include the URL in the issue you are creating.</li>
        </ul>

        <h2 class="marginTop">Note</h2>
        <ul>            
            <li>This directive is a practical solution, not a performance champion. It will not win any code efficiency competition.</li>
            <li>As for the moment, developments are on going, so I am not accepting pull requests. I will choose &  add them manually instead.</li>
            <li>If you like / use this directive in your awesome projects, star this repo. It's a huge motivation for me. Would also love to hear from you if you use it in an open source project. Thanks!</li>                    
        </ul>                
        
        <h2 class="marginTop">Licence</h2>
        Released under the MIT license:
        <div class="license">
        <p>The MIT License (MIT)</p>

        <p>Copyright (c) 2014 Ignatius Steven (https://github.com/isteven)</p>

<p>Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:</p>

<p>The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.</p>

<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE</p>
</div>

        <h2 class="marginTop">More AngularJS Directives</h2>
        Have a look on other directives I've created:
        <ul>     
            <li><a href="https://github.com/isteven/angular-multi-select" target='_blank'>AngularJS Multi Select</a>: multi-select dropdown, able to use HTML in your data. Supports unlimited nested grouping.</li>
            <!-- <li><a href="https://github.com/isteven/angular-omni-bar" target='_blank'>AngularJS Omni Bar</a>: multi purpose loading / progress bar.</li> -->
            <li><a href="https://github.com/isteven/angular-route-rage" target='_blank'>AngularJS Route Rage</a>: use $routeParams parameters directly in your view.</li>
        </ul>

        <h3>&nbsp;</h3>
    </div>
</body>
<script>

// Load the multi-select module
var myApp = angular.module('myApp', [ 'isteven-omni-bar', 'hljs' ]);

// Controller
myApp.controller( 'main' , [ '$scope' , '$interval' , function ( $scope, $interval ) {     

    // Demo on top of the page
    $scope.barText = function ( value1, value2 ) {
        if ( typeof value1 !== 'undefined' && typeof value2 !== 'undefined' ) {
            return 'S$' + value1 + ' of S$' + value2;
        }
    }

    $scope.setRandomColor = function() {
        var letters = '0123456789ABCDEF'.split('');
        var color = '#';
        for (var i = 0; i < 6; i++ ) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return { backgroundColor: color };
        
    }    

    $scope.value1 = 39;
    $scope.style1 = $scope.setRandomColor();

    $interval( function() {        
        $scope.style1 = $scope.setRandomColor();        
    },1500 );

    // Sample 1
    $scope.currentValue = 700;
    $scope.maxValue = 1500;
    $scope.loadingCurrent1 = {
        backgroundColor: "#008080"
    }    
        

    // Sample 2
    // page loading logic.    
    $scope.pageSize = 0;

    var pulse = $interval( function( pulse ) {
        $scope.pageSize = $scope.pageSize + 1;
        if ( $scope.pageSize > 98 ) {
            $scope.pageSize = 98;
        }
    }, 50 );

    angular.element(document).ready(function () {
        console.log( "done, page is loaded!" );
        
            $scope.pageSize = 100;
            $interval.cancel(pulse);
        
    });

    $scope.loadingBarStyle2 = {
        position: "fixed",
        top: "0px",
        left: "0px",
        height: "3px",
        zIndex: "20"
    }

    $scope.loadingCurrent2 = {
        backgroundColor: "orange"
    }
}]);    
/*
hljs.initHighlightingOnLoad(); 
*/
</script>    
</html>
